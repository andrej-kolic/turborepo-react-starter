name: Publish on Netlify (Custom)

on:
  workflow_dispatch:
    inputs:
      bundler:
        type: choice
        description: Bundler
        required: true
        options:
          - app-vite
          - app-webpack
          - app-esbuild

      environment:
        type: choice
        description: Environment
        required: true
        options:
          - production
          - staging

env:
  HUSKY: 0
  # SELECTED_ENVIRONMENT: ${{ github.ref_name }}
  BRANCH_NAME: ${{ github.ref_name }}
  BUILDENV: ${{ github.event.inputs.environment }}
  BUNDLER: ${{ github.event.inputs.bundler }}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Log environment
        run: echo "Environment=${{ github.event.inputs.environment }}, Bundler=${{github.event.inputs.bundler}}, BRANCH_NAME=$BRANCH_NAME"

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # # IMPORTANT: make sure to update netlify-cli version to match one from infra/netlify/package.json
      # # (so that local and CI deploy are using same version)
      # - name: Install Netlify
      #   run: npm install netlify-cli@21.5.0 -g

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: BUILD_ENVIRONMENT=${{ github.event.inputs.environment }} pnpm build --filter ${{ github.event.inputs.bundler }}

      - name: Log Build output
        run: ls apps/${{ github.event.inputs.bundler }}/dist

      - name: Deploy to Netlify
        id: netlify_deploy
        run: |
          cd infra/netlify && \
          pnpm deploy:netlify:ci

      - name: print 1
        run: pwd

      - name: print 2
        run: ls infra/netlify

      - name: print 3
        run: cat infra/netlify/deploy_output.json

      # - name: Deploy to Netlify
      #   id: netlify_deploy
      #   run: |
      #     prod_flag=""
      #     if [ ${{ github.event.inputs.environment }} = "production" ]; then prod_flag="--prod"; fi
      #     netlify deploy \
      #       --dir apps/${{ github.event.inputs.bundler }}/dist \
      #       --site ${{ secrets.NETLIFY_SITE_ID }} \
      #       --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} \
      #       --filter ${{ github.event.inputs.bundler }} \
      #       $prod_flag \
      #       --json \
      #       > deploy_output.json
      #   # output saved in a file we can read (deploy_output.json):
      #   # {
      #   #   "site_name": "turborepo-react-starter",
      #   #   "deploy_id": "672197a700d5efd972e83103",
      #   #   "deploy_url": "https://672197a700d5efd972e83103--turborepo-react-starter.netlify.app",
      #   #   "logs": "https://app.netlify.com/sites/turborepo-react-starter/deploys/672197a700d5efd972e83103",
      #   #   "url": "https://turborepo-react-starter.netlify.app"
      #   # }

      - name: Generate URLs
        id: generate_urls
        run: |
          jq . infra/netlify/deploy_output.json
          NETLIFY_DEPLOY_URL=$(jq -r '.deploy_url' infra/netlify/deploy_output.json)
          echo "NETLIFY_DEPLOY_URL=$NETLIFY_DEPLOY_URL" >> "$GITHUB_OUTPUT"
          NETLIFY_URL=$(jq -r '.url' infra/netlify/deploy_output.json)
          echo "NETLIFY_URL=$NETLIFY_URL" >> "$GITHUB_OUTPUT"

      - name: Log URLs
        run: |
          echo NETLIFY_DEPLOY_URL:${{ steps.generate_urls.outputs.NETLIFY_DEPLOY_URL }}
          echo NETLIFY_URL:${{ steps.generate_urls.outputs.NETLIFY_URL }}
